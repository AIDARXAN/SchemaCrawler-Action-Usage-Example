name: SchemaCrawler Job to Create Schema Diagram

on:
  push:
    branches:
      - dev

jobs:
  schemacrawler-job:
    runs-on: ubuntu-latest

    name: SchemaCrawler Job to Create Schema Diagram
    steps:
      - id: checkout
        name: Checkout repository
        uses: actions/checkout@v2

      - id: schemacrawler
        name: Run SchemaCrawler Action with specified command-line
        uses: schemacrawler/SchemaCrawler-Action@v16.16.3
        with:
          entrypoint: /schemacrawler.sh
          args: --server=postgresql --database=compliance-platform-dev --host=${{ secrets.HOST }} --user:env USER --password:env PASSWORD --output-file database-diagram.png --info-level=standard --command=schema --log-level=CONFIG --title "Secjure database"
        env:
          USER: ${{ secrets.USER }}
          PASSWORD: ${{ secrets.PASSWORD }}

      - id: upload-database-diagram
        name: Upload SchemaCrawler database diagram
        uses: actions/upload-artifact@v2
        with:
          name: database-diagram
          path: database-diagram.png

      - name: Step 1 - Create a temporary artifact downloads folder
        run: |
          git lfs track "database-diagram.png"
          git add .gitattributes
          git add database-diagram.png
          git commit -m "Update database-diagram"
          git push origin dev


#      - id: upload-documentation-to-wiki
#        uses: SwiftDocOrg/github-wiki-publish-action@rsync
#        with:
#          path: documentation/doc.md
#        env:
#          GH_PERSONAL_ACCESS_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}

      - id: check-success
        name: Fail the entire job if SchemaCrawler run failed
        run: |
          [ ${{ steps.schemacrawler.outputs.exit_status }} -eq 0 ] && echo "SchemaCrawler run succeeded" || echo "SchemaCrawler run failed"
          [ ${{ steps.schemacrawler.outputs.exit_status }} -eq 0 ] || exit 1
